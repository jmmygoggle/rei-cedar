@import '../../../css/settings/index.scss';
@import './vars/Grid.vars.scss';

// TODO: replace all of this with a mixin
$rowPct1: calc(#{$rowColumns} / 1 / #{$rowColumns} * 100%);
$rowPct2: calc(#{$rowColumns} / 2 / #{$rowColumns} * 100%);
$rowPct3: calc(#{$rowColumns} / 3 / #{$rowColumns} * 100%);
$rowPct4: calc(#{$rowColumns} / 4 / #{$rowColumns} * 100%);
$rowPct5: calc(#{$rowColumns} / 5 / #{$rowColumns} * 100%);
$rowPct6: calc(#{$rowColumns} / 6 / #{$rowColumns} * 100%);
$rowPct7: calc(#{$rowColumns} / 7 / #{$rowColumns} * 100%);
$rowPct8: calc(#{$rowColumns} / 8 / #{$rowColumns} * 100%);
$rowPct9: calc(#{$rowColumns} / 9 / #{$rowColumns} * 100%);
$rowPct10: calc(#{$rowColumns} / 10 / #{$rowColumns} * 100%);
$rowPct11: calc(#{$rowColumns} / 11 / #{$rowColumns} * 100%);
$rowPct12: calc(#{$rowColumns} / 12 / #{$rowColumns} * 100%);

/*******************
  NOTE: BEM naming except for _row and _span (instead of --row and --col)
   which are used for doing simpler :not() filtering
********************/

/* ==========================================================================
   # ROW
   ========================================================================== */

/*
* TOC:
*
* Base class
* Row elements
* Row modifiers
* Breakpoints
* |-- Row elements
* |-- Row modifiers
*/

.cdr-row {
  display: flex;
  flex-flow: row wrap;
  margin-top: calc(#{$rowGutter-xs} * -1);
  margin-left: calc(#{$rowGutter-xs} * -1);
  padding-left: 0;
  padding-right: 0;
  pointer-events: none;

  &.cdr-col {
    margin: 0;
    padding: 0;

    &:not([class*="colHide"]) {
      display: flex;
    }
  }

  /* Row elements
    ========================================================================== */

  &_row--1 {
    & > [class^="cdr-col"]:not([class*="cdr-col_span"]) {
      flex-basis: $rowPct1;
      width: $rowPct1;
      max-width: $rowPct1;
    }
  }

  &_row--2 {
    & > [class^="cdr-col"]:not([class*="cdr-col_span"]) {
      flex-basis: $rowPct2;
      width: $rowPct2;
      max-width: $rowPct2;
    }
  }

  &_row--3 {
    & > [class^="cdr-col"]:not([class*="cdr-col_span"]) {
      flex-basis: $rowPct3;
      width: $rowPct3;
      max-width: $rowPct3;
    }
  }

  &_row--4 {
    & > [class^="cdr-col"]:not([class*="cdr-col_span"]) {
      flex-basis: $rowPct4;
      width: $rowPct4;
      max-width: $rowPct4;
    }
  }

  &_row--5 {
    & > [class^="cdr-col"]:not([class*="cdr-col_span"]) {
      flex-basis: $rowPct5;
      width: $rowPct5;
      max-width: $rowPct5;
    }
  }

  &_row--6 {
    & > [class^="cdr-col"]:not([class*="cdr-col_span"]) {
      flex-basis: $rowPct6;
      width: $rowPct6;
      max-width: $rowPct6;
    }
  }

  &_row--7 {
    & > [class^="cdr-col"]:not([class*="cdr-col_span"]) {
      flex-basis: $rowPct7;
      width: $rowPct7;
      max-width: $rowPct7;
    }
  }

  &_row--8 {
    & > [class^="cdr-col"]:not([class*="cdr-col_span"]) {
      flex-basis: $rowPct8;
      width: $rowPct8;
      max-width: $rowPct8;
    }
  }

  &_row--9 {
    & > [class^="cdr-col"]:not([class*="cdr-col_span"]) {
      flex-basis: $rowPct9;
      width: $rowPct9;
      max-width: $rowPct9;
    }
  }

  &_row--10 {
    & > [class^="cdr-col"]:not([class*="cdr-col_span"]) {
      flex-basis: $rowPct10;
      width: $rowPct10;
      max-width: $rowPct10;
    }
  }

  &_row--11 {
    & > [class^="cdr-col"]:not([class*="cdr-col_span"]) {
      flex-basis: $rowPct11;
      width: $rowPct11;
      max-width: $rowPct11;
    }
  }

  &_row--12 {
    & > [class^="cdr-col"]:not([class*="cdr-col_span"]) {
      flex-basis: $rowPct12;
      width: $rowPct12;
      max-width: $rowPct12;
    }
  }

  &_row--auto {
    & > [class^="cdr-col"]:not([class*="cdr-col_span"]) {
      flex: none;
      width: auto;
      max-width: none;
    }
  }

  /* Row modifiers
  ========================================================================== */

  &__gutter--none {
    margin: 0 !important;

    & > .cdr-col {
      padding: 0 !important;
    }
  }

  &__gutter--small {
    margin-top: calc(#{$rowGutter-sm} * -1) !important;
    margin-left: calc(#{$rowGutter-sm} * -1) !important;

    & > .cdr-col {
      padding-top: $rowGutter-sm !important;
      padding-left: $rowGutter-sm !important;
    }
  }

  &__gutter--medium {
    margin-top: calc(#{$rowGutter-md} * -1) !important;
    margin-left: calc(#{$rowGutter-md} * -1) !important;

    & > .cdr-col {
      padding-top: $rowGutter-md !important;
      padding-left: $rowGutter-md !important;
    }
  }

  &__gutter--xxs {
    margin-top: calc(#{$cdr-space-eighth-x} * -1) !important;
    margin-left: calc(#{$cdr-space-eighth-x} * -1) !important;

    & > .cdr-col {
      padding-top: $cdr-space-eighth-x !important;
      padding-left: $cdr-space-eighth-x !important;
    }
  }

  &--nowrap {
    flex-wrap: nowrap;
    overflow: auto;

    & > .cdr-col {
      flex-shrink: 0;
      flex-grow: 0;
    }
  }

  &--left {
    justify-content: flex-start;
    align-self: flex-start;
  }

  &--center {
    justify-content: center;
  }

  &--right {
    justify-content: flex-end;
    align-self: flex-end;
  }

  &--stretch {
    align-items: stretch;
  }

  &--top {
    align-items: flex-start;
  }

  &--middle {
    align-items: center;
  }

  &--bottom {
    align-items: flex-end;
  }

  &--between {
    justify-content: space-between;
  }

  &--around {
    justify-content: space-around;
  }

  /* TODO: do we want to support this? http://tink.uk/flexbox-the-keyboard-navigation-disconnect/
  &--rowReverse {
    flex-direction: row-reverse;
  }
  &--verticalReverse {
    flex-direction: column-reverse;
  }
  */

  &--vertical {
    flex-direction: column;

    & > .cdr-col,
    & > .cdr-col[class*="cdr-col_span"] {
      flex-basis: auto !important;
    }
  }

  /* ROW SMALL
  ========================================================================== */

  @include cdr-sm-mq-up {
    margin-top: calc(#{$rowGutter-sm} * -1);
    margin-left: calc(#{$rowGutter-sm} * -1);

    /* Row small elements
    ========================================================================== */
    &_row--1\@sm {
      & > [class^="cdr-col"]:not([class*="cdr-col_span"]) {
        flex-basis: $rowPct1;
        width: $rowPct1;
        max-width: $rowPct1;
      }
    }

    &_row--2\@sm {
      & > [class^="cdr-col"]:not([class*="cdr-col_span"]) {
        flex-basis: $rowPct2;
        width: $rowPct2;
        max-width: $rowPct2;
      }
    }

    &_row--3\@sm {
      & > [class^="cdr-col"]:not([class*="cdr-col_span"]) {
        flex-basis: $rowPct3;
        width: $rowPct3;
        max-width: $rowPct3;
      }
    }

    &_row--4\@sm {
      & > [class^="cdr-col"]:not([class*="cdr-col_span"]) {
        flex-basis: $rowPct4;
        width: $rowPct4;
        max-width: $rowPct4;
      }
    }

    &_row--5\@sm {
      & > [class^="cdr-col"]:not([class*="cdr-col_span"]) {
        flex-basis: $rowPct5;
        width: $rowPct5;
        max-width: $rowPct5;
      }
    }

    &_row--6\@sm {
      & > [class^="cdr-col"]:not([class*="cdr-col_span"]) {
        flex-basis: $rowPct6;
        width: $rowPct6;
        max-width: $rowPct6;
      }
    }

    &_row--7\@sm {
      & > [class^="cdr-col"]:not([class*="cdr-col_span"]) {
        flex-basis: $rowPct7;
        width: $rowPct7;
        max-width: $rowPct7;
      }
    }

    &_row--8\@sm {
      & > [class^="cdr-col"]:not([class*="cdr-col_span"]) {
        flex-basis: $rowPct8;
        width: $rowPct8;
        max-width: $rowPct8;
      }
    }

    &_row--9\@sm {
      & > [class^="cdr-col"]:not([class*="cdr-col_span"]) {
        flex-basis: $rowPct9;
        width: $rowPct9;
        max-width: $rowPct9;
      }
    }

    &_row--10\@sm {
      & > [class^="cdr-col"]:not([class*="cdr-col_span"]) {
        flex-basis: $rowPct10;
        width: $rowPct10;
        max-width: $rowPct10;
      }
    }

    &_row--11\@sm {
      & > [class^="cdr-col"]:not([class*="cdr-col_span"]) {
        flex-basis: $rowPct11;
        width: $rowPct11;
        max-width: $rowPct11;
      }
    }

    &_row--12\@sm {
      & > [class^="cdr-col"]:not([class*="cdr-col_span"]) {
        flex-basis: $rowPct12;
        width: $rowPct12;
        max-width: $rowPct12;
      }
    }

    &_row--auto\@sm {
      & > [class^="cdr-col"]:not([class*="cdr-col_span"]) {
        flex: 0 0 auto;
        width: auto;
        max-width: none;
      }
    }

    /* Row small modifiers
    ========================================================================== */
    &__gutter--none\@sm {
      margin: 0 !important;

      & > .cdr-col {
        padding: 0 !important;
      }
    }

    &__gutter--small\@sm {
      margin-top: calc(#{$rowGutter-sm} * -1) !important;
      margin-left: calc(#{$rowGutter-sm} * -1) !important;

      & > .cdr-col {
        padding-top: $rowGutter-sm !important;
        padding-left: $rowGutter-sm !important;
      }
    }

    &__gutter--medium\@sm {
      margin-top: calc(#{$rowGutter-md} * -1) !important;
      margin-left: calc(#{$rowGutter-md} * -1) !important;

      & > .cdr-col {
        padding-top: $rowGutter-md !important;
        padding-left: $rowGutter-md !important;
      }
    }

    &__gutter--xxs\@sm {
      margin-top: calc(#{$cdr-space-eighth-x} * -1) !important;
      margin-left: calc(#{$cdr-space-eighth-x} * -1) !important;

      & > .cdr-col {
        padding-top: $cdr-space-eighth-x !important;
        padding-left: $cdr-space-eighth-x !important;
      }
    }

    &--nowrap\@sm {
      flex-wrap: nowrap;
      overflow: auto;

      & > .cdr-col {
        flex-shrink: 0;
        flex-grow: 0;
      }
    }

    &--wrap\@sm {
      flex-wrap: wrap;

      & > .cdr-col {
        flex-shrink: 1;
        flex-grow: 1;
      }
    }

    &--left\@sm {
      justify-content: flex-start;
      align-self: flex-start;
    }

    &--center\@sm {
      justify-content: center;
    }

    &--right\@sm {
      justify-content: flex-end;
      align-self: flex-end;
    }

    &--stretch\@sm {
      align-items: stretch;
    }

    &--top\@sm {
      align-items: flex-start;
    }

    &--middle\@sm {
      align-items: center;
    }

    &--bottom\@sm {
      align-items: flex-end;
    }

    &--vertical\@sm {
      flex-direction: column;

      & > .cdr-col,
      & > .cdr-col[class*="cdr-col_span"] {
        flex-basis: auto !important;
      }
    }

    &--between\@sm {
      justify-content: space-between;
    }

    &--around\@sm {
      justify-content: space-around;
    }
  }

  /* ROW MEDIUM
  ========================================================================== */

  @include cdr-md-mq-up {
    margin-top: calc(#{$rowGutter-md} * -1);
    margin-left: calc(#{$rowGutter-md} * -1);

    /* Row medium elements
    ========================================================================== */

    &_row--1\@md {
      & > [class^="cdr-col"]:not([class*="cdr-col_span"]) {
        flex-basis: $rowPct1;
        width: $rowPct1;
        max-width: $rowPct1;
      }
    }

    &_row--2\@md {
      & > [class^="cdr-col"]:not([class*="cdr-col_span"]) {
        flex-basis: $rowPct2;
        width: $rowPct2;
        max-width: $rowPct2;
      }
    }

    &_row--3\@md {
      & > [class^="cdr-col"]:not([class*="cdr-col_span"]) {
        flex-basis: $rowPct3;
        width: $rowPct3;
        max-width: $rowPct3;
      }
    }

    &_row--4\@md {
      & > [class^="cdr-col"]:not([class*="cdr-col_span"]) {
        flex-basis: $rowPct4;
        width: $rowPct4;
        max-width: $rowPct4;
      }
    }

    &_row--5\@md {
      & > [class^="cdr-col"]:not([class*="cdr-col_span"]) {
        flex-basis: $rowPct5;
        width: $rowPct5;
        max-width: $rowPct5;
      }
    }

    &_row--6\@md {
      & > [class^="cdr-col"]:not([class*="cdr-col_span"]) {
        flex-basis: $rowPct6;
        width: $rowPct6;
        max-width: $rowPct6;
      }
    }

    &_row--7\@md {
      & > [class^="cdr-col"]:not([class*="cdr-col_span"]) {
        flex-basis: $rowPct7;
        width: $rowPct7;
        max-width: $rowPct7;
      }
    }

    &_row--8\@md {
      & > [class^="cdr-col"]:not([class*="cdr-col_span"]) {
        flex-basis: $rowPct8;
        width: $rowPct8;
        max-width: $rowPct8;
      }
    }

    &_row--9\@md {
      & > [class^="cdr-col"]:not([class*="cdr-col_span"]) {
        flex-basis: $rowPct9;
        width: $rowPct9;
        max-width: $rowPct9;
      }
    }

    &_row--10\@md {
      & > [class^="cdr-col"]:not([class*="cdr-col_span"]) {
        flex-basis: $rowPct10;
        width: $rowPct10;
        max-width: $rowPct10;
      }
    }

    &_row--11\@md {
      & > [class^="cdr-col"]:not([class*="cdr-col_span"]) {
        flex-basis: $rowPct11;
        width: $rowPct11;
        max-width: $rowPct11;
      }
    }

    &_row--12\@md {
      & > [class^="cdr-col"]:not([class*="cdr-col_span"]) {
        flex-basis: $rowPct12;
        width: $rowPct12;
        max-width: $rowPct12;
      }
    }

    &_row--auto\@md {
      & > [class^="cdr-col"]:not([class*="cdr-col_span"]) {
        flex: 0 0 auto;
        width: auto;
        max-width: none;
      }
    }

    /* Row medium modifiers
    ========================================================================== */

    &__gutter--none\@md {
      margin: 0 !important;

      & > .cdr-col {
        padding: 0 !important;
      }
    }

    &__gutter--small\@md {
      margin-top: calc(#{$rowGutter-sm} * -1) !important;
      margin-left: calc(#{$rowGutter-sm} * -1) !important;

      & > .cdr-col {
        padding-top: $rowGutter-sm !important;
        padding-left: $rowGutter-sm !important;
      }
    }

    &__gutter--medium\@md {
      margin-top: calc(#{$rowGutter-md} * -1) !important;
      margin-left: calc(#{$rowGutter-md} * -1) !important;

      & > .cdr-col {
        padding-top: $rowGutter-md !important;
        padding-left: $rowGutter-md !important;
      }
    }

    &__gutter--xxs\@md {
      margin-top: calc(#{$cdr-space-eighth-x} * -1) !important;
      margin-left: calc(#{$cdr-space-eighth-x} * -1) !important;

      & > .cdr-col {
        padding-top: $cdr-space-eighth-x !important;
        padding-left: $cdr-space-eighth-x !important;
      }
    }

    &--nowrap\@md {
      flex-wrap: nowrap;
      overflow: auto;

      & > .cdr-col {
        flex-shrink: 0;
        flex-grow: 0;
      }
    }

    &--wrap\@md {
      flex-wrap: wrap;

      & > .cdr-col {
        flex-shrink: 1;
        flex-grow: 1;
      }
    }

    &--left\@md {
      justify-content: flex-start;
      align-self: flex-start;
    }

    &--center\@md {
      justify-content: center;
    }

    &--right\@md {
      justify-content: flex-end;
      align-self: flex-end;
    }

    &--stretch\@md {
      align-items: stretch;
    }

    &--top\@md {
      align-items: flex-start;
    }

    &--middle\@md {
      align-items: center;
    }

    &--bottom\@md {
      align-items: flex-end;
    }

    &--vertical\@md {
      flex-direction: column;

      & > .cdr-col,
      & > .cdr-col[class*="cdr-col_span"] {
        flex-basis: auto !important;
      }
    }

    &--between\@md {
      justify-content: space-between;
    }

    &--around\@md {
      justify-content: space-around;
    }
  }

  /* ROW LARGE
  ========================================================================== */

  @include cdr-lg-mq-up {
    margin-top: calc(#{$rowGutter-lg} * -1);
    margin-left: calc(#{$rowGutter-lg} * -1);

    /* Row large elements
    ========================================================================== */

    &_row--1\@lg {
      & > [class^="cdr-col"]:not([class*="cdr-col_span"]) {
        flex-basis: $rowPct1;
        width: $rowPct1;
        max-width: $rowPct1;
      }
    }

    &_row--2\@lg {
      & > [class^="cdr-col"]:not([class*="cdr-col_span"]) {
        flex-basis: $rowPct2;
        width: $rowPct2;
        max-width: $rowPct2;
      }
    }

    &_row--3\@lg {
      & > [class^="cdr-col"]:not([class*="cdr-col_span"]) {
        flex-basis: $rowPct3;
        width: $rowPct3;
        max-width: $rowPct3;
      }
    }

    &_row--4\@lg {
      & > [class^="cdr-col"]:not([class*="cdr-col_span"]) {
        flex-basis: $rowPct4;
        width: $rowPct4;
        max-width: $rowPct4;
      }
    }

    &_row--5\@lg {
      & > [class^="cdr-col"]:not([class*="cdr-col_span"]) {
        flex-basis: $rowPct5;
        width: $rowPct5;
        max-width: $rowPct5;
      }
    }

    &_row--6\@lg {
      & > [class^="cdr-col"]:not([class*="cdr-col_span"]) {
        flex-basis: $rowPct6;
        width: $rowPct6;
        max-width: $rowPct6;
      }
    }

    &_row--7\@lg {
      & > [class^="cdr-col"]:not([class*="cdr-col_span"]) {
        flex-basis: $rowPct7;
        width: $rowPct7;
        max-width: $rowPct7;
      }
    }

    &_row--8\@lg {
      & > [class^="cdr-col"]:not([class*="cdr-col_span"]) {
        flex-basis: $rowPct8;
        width: $rowPct8;
        max-width: $rowPct8;
      }
    }

    &_row--9\@lg {
      & > [class^="cdr-col"]:not([class*="cdr-col_span"]) {
        flex-basis: $rowPct9;
        width: $rowPct9;
        max-width: $rowPct9;
      }
    }

    &_row--10\@lg {
      & > [class^="cdr-col"]:not([class*="cdr-col_span"]) {
        flex-basis: $rowPct10;
        width: $rowPct10;
        max-width: $rowPct10;
      }
    }

    &_row--11\@lg {
      & > [class^="cdr-col"]:not([class*="cdr-col_span"]) {
        flex-basis: $rowPct11;
        width: $rowPct11;
        max-width: $rowPct11;
      }
    }

    &_row--12\@lg {
      & > [class^="cdr-col"]:not([class*="cdr-col_span"]) {
        flex-basis: $rowPct12;
        width: $rowPct12;
        max-width: $rowPct12;
      }
    }

    &_row--auto\@lg {
      & > [class^="cdr-col"]:not([class*="cdr-col_span"]) {
        flex: 0 0 auto;
        width: auto;
        max-width: none;
      }
    }

    /* Row large modifiers
    ========================================================================== */

    &__gutter--none\@lg {
      margin: 0 !important;

      & > .cdr-col {
        padding: 0 !important;
      }
    }

    &__gutter--small\@lg {
      margin-top: calc(#{$rowGutter-sm} * -1) !important;
      margin-left: calc(#{$rowGutter-sm} * -1) !important;

      & > .cdr-col {
        padding-top: $rowGutter-sm !important;
        padding-left: $rowGutter-sm !important;
      }
    }

    &__gutter--medium\@lg {
      margin-top: calc(#{$rowGutter-md} * -1) !important;
      margin-left: calc(#{$rowGutter-md} * -1) !important;

      & > .cdr-col {
        padding-top: $rowGutter-md !important;
        padding-left: $rowGutter-md !important;
      }
    }

    &__gutter--xxs\@lg {
      margin-top: calc(#{$cdr-space-eighth-x} * -1) !important;
      margin-left: calc(#{$cdr-space-eighth-x} * -1) !important;

      & > .cdr-col {
        padding-top: $cdr-space-eighth-x !important;
        padding-left: $cdr-space-eighth-x !important;
      }
    }

    &--nowrap\@lg {
      flex-wrap: nowrap;
      overflow: auto;

      & > .cdr-col {
        flex-shrink: 0;
        flex-grow: 0;
      }
    }

    &--wrap\@lg {
      flex-wrap: wrap;

      & > .cdr-col {
        flex-shrink: 1;
        flex-grow: 1;
      }
    }

    &--left\@lg {
      justify-content: flex-start;
      align-self: flex-start;
    }

    &--center\@lg {
      justify-content: center;
    }

    &--right\@lg {
      justify-content: flex-end;
      align-self: flex-end;
    }

    &--stretch\@lg {
      align-items: stretch;
    }

    &--top\@lg {
      align-items: flex-start;
    }

    &--middle\@lg {
      align-items: center;
    }

    &--bottom\@lg {
      align-items: flex-end;
    }

    &--vertical\@lg {
      flex-direction: column;

      & > .cdr-col,
      & > .cdr-col[class*="cdr-col_span"] {
        flex-basis: auto !important;
      }
    }

    &--between\@lg {
      justify-content: space-between;
    }

    &--around\@lg {
      justify-content: space-around;
    }
  }
}
